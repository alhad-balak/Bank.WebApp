@page "/withdrawal"
@inject ITransactionData _dbTransaction
@inject SessionState state


<PageTitle>Withdrawal</PageTitle>
<div>
    <h1>Withdrawal</h1>

    <p>Enter the details to complete the transaction.</p>

    <hr />
    <br />
    <Notification Message="@Message" Action="@action" />

    <hr />

    <EditForm Model="@tm" OnValidSubmit="SubmitData">

        <div class="mb-3">
            <label for="exampleInputMode" class="form-label">Mode of Transaction</label>
            <InputRadioGroup @bind-Value="TransactionID">
                <div class="mb-3">
                    <div class="form-check-inline form-check">
                        <InputRadio Value="1" />ATM
                    </div>
                    <div class="form-check-inline form-check">
                        <InputRadio Value="2" />Cheque
                    </div>
                    <div class="form-check-inline form-check">
                        <InputRadio Value="3" />UPI
                    </div>
                    <div class="form-check-inline form-check">
                        <InputRadio Value="4" />Cash
                    </div>
                    <div class="invalid-feedback">Choose Mode of Transaction</div>
                </div>
            </InputRadioGroup>
            @if (!ValidMode)
            {
                <div class="form-text text-danger">
                    Choose the Mode of Transaction!!
                </div>
            }
        </div>

        <div class="mb-3">
            <label for="exampleInputAmount" class="form-label">Amount</label>
            <input type="number" class="form-control" id="exampleInputAmount" aria-describedby="AmountHelp" @bind-value="@tm.Debit_amt" required>
            @if (!ValidAmt)
            {
                <div class="form-text text-danger" id="AmountHelp">
                    Enter a valid amount
                </div>
            }
        </div>

        <div class="mb-3">
            <input type="checkbox" class="form-check-input" id="exampleTnC" describedby="TnCHelp" required>
            <label class="form-check-label" for="exampleTnC">I agree to the Terms and Condition</label>
        </div>


        <div class="mb-3">
            <button class="btn btn-primary" type="submit">Transfer</button>
        </div>
    </EditForm>
</div>

@code {

    List<BalanceModel> balList = new List<BalanceModel>();
    TransactionModel tm = new TransactionModel();
    bool ValidAmt = true;
    bool ValidMode = true;



    int TransactionID;
    string action = "";
    string Message = "";
    string RepeatPassword = "";
    private void SubmitData()
    {

        tm.User_name = state.UserName;
        if (TransactionID == 1)
        {
            tm.Trans_type = "ATM";
            tm.Trans_id = "atmtyid";
            TransactionID = 0;
            ValidMode = true;
        }
        else if (TransactionID == 2)
        {
            tm.Trans_type = "Cheque";
            tm.Trans_id = "chequetyid";
            TransactionID = 0;
            ValidMode = true;
        }
        else if (TransactionID == 3)
        {
            tm.Trans_type = "UPI";
            tm.Trans_id = "upityid";
            TransactionID = 0;
            ValidMode = true;
        }
        else if (TransactionID == 4)
        {
            tm.Trans_type = "Cash";
            tm.Trans_id = "cashtyid";
            TransactionID = 0;
            ValidMode = true;
        }
        else
        {
            ValidMode = false;
        }

        @foreach (var data in balList)
        {
            @if (data.User_name == state.UserName)
            {
                if (Int32.Parse(tm.Debit_amt!) > Int32.Parse(data.Balance!))
                    ValidAmt = false;
                else
                    ValidAmt = true;

                break;
            }
            else
                ValidAmt = false;

        }
        if (ValidAmt && ValidMode)
        {
            Console.WriteLine(tm.Credit_amt!.GetType());
            Console.WriteLine(tm.Debit_amt);
            Console.WriteLine(tm.Trans_id);
            Console.WriteLine(tm.Trans_type);
            Console.WriteLine(tm.User_name);
            Message=_dbTransaction.Withdrawal(tm)!.ToString();
            action = "success";
            //Message = "Congralutaion! Your Transaction has been successful.";
            tm = new TransactionModel();
        }
        else
        {
            if (!ValidAmt)
            {
                action = "error";
                Message = "Enter a valid amount";
            }
            else
            {
                action = "error";
                Message = "Your Transaction has been failed!";
            }
        }
    }
    protected override void OnParametersSet()
    {
        balList = _dbTransaction.LoadBalance();
    }
}
